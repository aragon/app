name: Flooz Deploy v1

on:
  push:
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  NODE_CACHE: "yarn"
  APP_ENV: ${{ (github.ref == 'refs/heads/main' && 'production') || 'development' }}
  VERCEL_ARGS: ${{ (github.ref == 'refs/heads/main' && '--confirm --prod') || '--confirm'  }}
  VERCEL_DOMAIN: ${{ (github.ref == 'refs/heads/main' && 'flooz.xyz') || 'develop.flooz.xyz'  }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.NODE_CACHE }}
      - name: Restore NextJs cache
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]sx?') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build DEV or PROD application
        run: |
          yarn setup ${{ env.APP_ENV }}
          yarn build
      - name: Cache NextJs build
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ github.ref }}-${{ github.sha }}

  deploy:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.NODE_CACHE }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Restore cached NextJs build
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/.next
          key: ${{ github.ref }}-${{ github.sha }}
      - name: Setup environment
        run: yarn setup ${{ env.APP_ENVIRONMENT }}
      - name: Vercel deployment
        id: deploy
        uses: amondnet/vercel-action@v25.1.1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: flooz-trade
          github-comment: false
          vercel-args: ${{ env.VERCEL_ARGS }}
      - name: Set vercel alias
        uses: actions/github-script@v6.4.1
        env:
          previewUrl: ${{ steps.deploy.outputs.preview-url }}
          aliasDomain: ${{ env.VERCEL_ALIAS_DOMAIN }}
          vercelToken: ${{ secrets.VERCEL_TOKEN }}
          vercelTeamId: ${{ secrets.VERCEL_ORG_ID }}
        with:
          script: |
            const setAlias = require('./.github/scripts/set-alias.js');
            await setAlias({ github, context, core });
      - name: Version check
        id: version-check
        uses: EndBug/version-check@v2.1.1
        with:
          diff-search: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Version check fail
        if: steps.version-check.outputs.changed == 'false' && github.ref == 'refs/heads/main'
        run: |
          echo "No version change found, please bump the application version on the package.json file and create a release manually."
      - name: Create release
        if: steps.version-check.outputs.changed == 'true' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.version }}
          release_name: v${{ steps.version-check.outputs.version }}
