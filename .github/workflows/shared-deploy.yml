# The "Shared Deploy" workflow deploys the application to Vercel, either in production or preview mode based on the
# `prod` input. It retrieves the build artifacts, prepares secrets, bundles the Vercel application, and deploys it.
# If a custom domain is specified, it assigns the deployment URL to that domain.

name: App Shared Deploy

on:
  workflow_call:
    inputs:
      domain:
        description: "Assign the new deployment URL to the specified input when set"
        required: false
        type: string
      env:
        description: "Environment to get the Github secrets and variables from"
        required: true
        type: string
    outputs:
      deploymentUrl:
        description: "The URL of the Vercel deployment"
        value: ${{ jobs.deploy.outputs.deploymentUrl }}

env:
  VERCEL_SCOPE: aragon-app
  VERCEL_ARGS: ${{ (inputs.env == 'production' && '--prod') || '' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    outputs:
      deploymentUrl: ${{ steps.set-deployment-url.outputs.deploymentUrl }}
    steps:
      - name: Download infra credentials
        uses: aragon/github-templates/steps/credential-retrieval@v0.4
        with:
          op-token: "${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}"
          op-vault: "kv_app-next_infra"
      - name: Setup
        uses: aragon/app-next/.github/actions/setup@main
        with:
          node-version: 22
      - name: Retrieve NextJs build
        uses: actions/download-artifact@v5.0.0
        with:
          name: nextjs-build
      - name: Setup env file secrets
        uses: aragon/github-templates/steps/credential-retrieval@v0.4
        with:
          op-token: "${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}"
          op-vault: "kv_app-next_${{ inputs.env }}"
          secret-filepath: ".env"
          mode: alltofile
      - name: Bundle Vercel application
        run: yarn vercel build ${{ env.VERCEL_ARGS }} --yes --token=${{ env.VERCEL_TOKEN }} --scope ${{ env.VERCEL_SCOPE }}
      - name: Vercel deployment
        run: yarn vercel deploy --prebuilt ${{ env.VERCEL_ARGS }} --skip-domain --yes --token=${{ env.VERCEL_TOKEN }} --scope ${{ env.VERCEL_SCOPE }} > deployment-url.txt
      - name: Set output
        id: set-deployment-url
        run: echo "deploymentUrl=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
      - name: Set deployment alias
        if: ${{ inputs.domain != '' }}
        run: yarn vercel alias ${{ steps.set-deployment-url.outputs.deploymentUrl }} ${{ inputs.domain }} --token=${{ env.VERCEL_TOKEN }} --scope ${{ env.VERCEL_SCOPE }}
      - name: Dispatch E2E tests
        uses: aragon/app-qa/.github/actions/dispatch@main
        if: ${{ inputs.env == 'development' || inputs.env == 'staging' || inputs.env == 'production' }}
        with:
          opToken: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_QA }}
          environment: ${{ inputs.env }}
