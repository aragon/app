name: App E2E Tests

on:
  pull_request:
    types:
      - labeled
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  NODE_CACHE: "yarn"
  APP_ENV: "preview"
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: contains(github.event.pull_request.labels.*.name, 'e2e-tests')

    steps:
      - name: Load secrets
        id: load-secrets
        uses: 1password/load-secrets-action@v2.0.0
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PRODUCTION_BACKUPS_TEMP }}
          GH_APP_QA: op://apikeys_production/gh-app-qa/credential
      - name: Checkout app-next Repository
        uses: actions/checkout@v4.2.2
      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.NODE_CACHE }}
      - name: Restore NextJs cache
        uses: actions/cache@v4.2.0
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]sx?') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Install app-next dependencies
        run: yarn install --immutable
      - name: Prepare PRE build
        run: yarn setup ${{ env.APP_ENV }}
      - name: Prepare app-next secrets
        run: |
          echo "NEXT_SECRET_IPFS_JWT=${{ secrets.NEXT_SECRET_IPFS_JWT }}" >> .env
          echo "NEXT_SECRET_RPC_KEY=${{ secrets.NEXT_SECRET_RPC_KEY }}" >> .env
      - name: Bundle Vercel application
        run: yarn vercel build --yes --token=${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_SCOPE }}
      - name: Vercel deployment
        run: yarn vercel deploy --prebuilt --skip-domain --yes --token=${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_SCOPE }} > deployment-url.txt
        # env:
        #   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Extract preview URL
        id: preview_url
        run: |
          PREVIEW_URL=$(cat deployment-url.txt | grep -o 'https://.*')
          echo "Preview URL: $PREVIEW_URL"
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # Step 8: Checkout app-qa repository
      - name: Checkout app-qa Repository
        uses: actions/checkout@v4
        with:
          repository: aragon/app-qa
          # token: ${{ secrets.GITHUB_TOKEN }}
          token: ${{ steps.load-secrets.outputs.GH_APP_QA }}
          path: ./app-qa
      # - name: Initialize app-qa submodule
      #   run: |
      #     git submodule add https://$GITHUB_ACTOR:${{ steps.load-secrets.outputs.GH_APP_QA }}@github.com/aragon/app-qa.git ./app-qa || true
      #     cd ./app-qa
      #     git checkout main
      #     git pull origin main
      #     cd ..
      #   env:
      #     GITHUB_ACTOR: ${{ github.actor }}
      - name: Install app-qa dependencies
        working-directory: ./app-qa
        # run: yarn install --frozen-lockfile
        run: yarn install --immutable
      - name: Install Playwright Browsers
        working-directory: ./app-qa
        run: npx playwright install chromium --with-deps
      - name: Build Synpress Depencies
        working-directory: ./app-qa
        # if: steps.synpress-cache.outputs.cache-hit != 'true'
        run: xvfb-run npx synpress ./tests/
        env:
          METAMASK_SEED_PHRASE: ${{ secrets.METAMASK_SEED_PHRASE }}
          METAMASK_PASSWORD: ${{ secrets.METAMASK_PASSWORD }}
      - name: Run E2E Tests
        working-directory: ./app-qa
        run: xvfb-run yarn playwright test ./tests/sppPlugin/sppPlugin_publishProposal.spec.ts --project=chromium
        env:
          METAMASK_SEED_PHRASE: ${{ secrets.METAMASK_SEED_PHRASE }}
          METAMASK_PASSWORD: ${{ secrets.METAMASK_PASSWORD }}
          NEXT_SECRET_IPFS_JWT: ${{ secrets.NEXT_SECRET_IPFS_JWT }}
          TEST_ENV: preview
          PREVIEW_URL: ${{ env.PREVIEW_URL }}
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./app-qa/playwright-report/
          retention-days: 30
      - name: Notify Discord
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          echo "Sending Discord failure notification..."
          curl -X POST -H "Content-Type: application/json" -d @- https://discord.com/api/webhooks/1309183202719699084/7iigCapTmyIHtgkqcLfXY9j557T_YChm7bv9h-BBU37ZhPDIIZYt34Z0KkqQGCBGic1M <<EOF
          {
            "embeds": [{
              "title": "❌ E2E Tests Failed",
              "color": 15158332,
              "fields": [
                { "name": "Repository", "value": "${{ github.repository }}", "inline": false },
                { "name": "Branch", "value": "${{ github.ref }}", "inline": false },
                { "name": "Environment", "value": "preview", "inline": false },
                { "name": "Preview URL", "value": "${{ env.PREVIEW_URL }}", "inline": false },
                { "name": "Artifact Download URL", "value": "[Download Playwright Report]($ARTIFACT_URL)", "inline": false },
                { "name": "Details", "value": "[View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})", "inline": false }
              ]
            }]
          }
          EOF
      - name: Cleanup
        run: rm -rf ./app-next ./app-qa
