{
  "app": {
    "application": {
      "bannerDao": {
        "adminMember": {
          "action": "Add governance",
          "manage": "Manage admins",
          "message": "You are a DAO admin. You can add as many custom governance processes as your DAO needs."
        },
        "adminPlugin": {
          "action": "View admins",
          "message": "This DAO is governed by admins. They can make changes to the DAO without a proposal."
        }
      },
      "connectWalletDialog": {
        "a11y": {
          "description": "Connect your wallet to Aragon",
          "title": "Connect wallet"
        },
        "action": {
          "cancel": "Cancel",
          "connect": "Connect"
        },
        "auditLink": "https://github.com/aragon/osx/blob/main/audits/Halborn_AragonOSx_v1_4_Smart_Contract_Security_Assessment_Report_2025_01_03.pdf",
        "connect": "wants to connect to your wallet",
        "feature": {
          "permissions": "View-only permissions",
          "smartContracts": "Audited smart contracts",
          "stats": "Trusted by 7,500+ DAOs and $27B+"
        }
      },
      "debugPanel": {
        "title": "Debug"
      },
      "footer": {
        "copyright": "© {{year}} Aragon",
        "governed": "Governed on",
        "link": {
          "build": "Build",
          "explore": "Explore",
          "help": "Support",
          "learn": "Learn",
          "privacy": "Privacy",
          "termsOfService": "Terms of Service"
        }
      },
      "layoutDao": {
        "notFound": {
          "action": "Explore DAOs",
          "description": "We couldn't find the DAO you're looking for.",
          "title": "DAO not found"
        }
      },
      "layoutWizard": {
        "notFound": {
          "action": "Explore DAOs",
          "description": "We couldn't find the DAO you're looking for.",
          "title": "DAO not found"
        }
      },
      "navigationDao": {
        "a11y": {
          "description": "This dialog provides key DAO details and links to governance, treasury, and community pages",
          "title": "DAO navigation menu"
        },
        "dialog": {
          "explore": "Explore all DAOs"
        },
        "link": {
          "assets": "Assets",
          "dashboard": "Dashboard",
          "members": "Members",
          "proposals": "Proposals",
          "settings": "Settings",
          "transactions": "Transactions"
        }
      },
      "notFoundBase": {
        "action": "Explore DAOs",
        "description": "We couldn't find the page you're looking for.",
        "title": "Page not found"
      },
      "notFoundDao": {
        "action": "Go to dashboard",
        "description": "We couldn't find the page you're looking for.",
        "title": "Page not found"
      },
      "userDialog": {
        "a11y": {
          "description": "Information about the connected user",
          "title": "Connected user"
        },
        "disconnect": "Disconnect"
      }
    },
    "createDao": {
      "createDaoDetailsDialog": {
        "actionLabel": "Get started",
        "description": "Start simple and learn as you go. You can adapt your DAO at any time.",
        "steps": {
          "describe": "Describe your DAO",
          "network": "Select chain"
        },
        "title": "Create new DAO"
      },
      "createDaoForm": {
        "metadata": {
          "avatar": {
            "error": {
              "file-invalid-type": "The selected file type is not supported. Upload a valid image file (e.g., PNG, JPG, or GIF).",
              "file-too-large": "The file size exceeds the maximum allowed limit of 1 MB.",
              "square-only": "The image must be square. Upload a square image.",
              "too-many-files": "Only one file can be uploaded at a time.",
              "unknown-file-error": "Unable to upload image",
              "wrong-dimension": "The image dimensions exceed the maximum allowed size of 1024x1024 pixels."
            },
            "helpText": "JPG, PNG, or GIF of no more than 1 MB and less than 1024x1024px.",
            "label": "Logo"
          },
          "description": {
            "helpText": "This is shown on the DAO's dashboard and the Explore page so visitors can easily find you.",
            "label": "Description"
          },
          "ens": {
            "error": {
              "invalid": "ENS subdomain is invalid.",
              "taken": "ENS subdomain is not available."
            },
            "helpText": "This is a custom onchain identifier for your DAO. It can be used in URLs to access your DAO as well as send assets.",
            "label": "ENS subname"
          },
          "name": {
            "label": "DAO name"
          },
          "resources": {
            "helpText": "These are shown as links on the DAO dashboard. They are best suited for your website, social media, or other communication channels."
          }
        },
        "network": {
          "ethereum-sepolia": {
            "description": "We recommend launching a test DAO your first time."
          },
          "helpText": "The chain you choose is where your tokens and assets are stored.",
          "label": "Select chain",
          "tag": {
            "beta": "Beta",
            "disabled": "Soon",
            "testnet": "Testnet"
          }
        }
      },
      "createDaoPage": {
        "finalStep": "Publish DAO",
        "steps": {
          "DEBUG": {
            "description": "Debug step for creating your DAO",
            "name": "Debug",
            "title": "Debug"
          },
          "METADATA": {
            "description": "Describe your DAO so visitors know they've come to the right place. Don't worry if they're not final—any of these fields can be changed later.",
            "name": "Describe your DAO",
            "title": "Describe your DAO"
          },
          "NETWORK": {
            "description": "The chain you choose is where your DAO and tokens will be deployed. If you already have a token, select the chain your token is on.",
            "name": "Select chain",
            "title": "Select chain"
          }
        },
        "submitLabel": "Publish DAO"
      },
      "createProcessDetailsDialog": {
        "actionLabel": "Get started",
        "description": "Governance should suit your DAO's needs. Whether it's for asset management, protocol upgrades, or team coordination, you can propose adding a new governance process at any time.",
        "steps": {
          "describe": "Describe new proposal type",
          "design": "Design the governance process",
          "designate": "Set proposal creation rules"
        },
        "title": "Create governance process"
      },
      "createProcessForm": {
        "governance": {
          "basicBodyField": {
            "action": {
              "add": "Add"
            },
            "error": {
              "required": "A body must be added to this process."
            },
            "helpText": "Governing bodies decide whether or not the proposal passes.",
            "label": "Voting body"
          },
          "bodyField": {
            "action": {
              "edit": "Edit",
              "more": "More",
              "remove": "Remove body"
            },
            "default": {
              "address": "Address",
              "ens": "ENS name"
            }
          },
          "stageBodiesField": {
            "action": {
              "add": "Add body",
              "edit": "Edit body",
              "more": "More",
              "remove": "Remove body"
            },
            "helpText": "These bodies will decide whether this stage passes.",
            "label": {
              "normal": "Voting bodies",
              "veto": "Vetoing bodies"
            },
            "timelockStage": {
              "description": "Without bodies, the stage will be a timelock so proposals pass automatically when it ends.",
              "heading": "No voting bodies"
            }
          },
          "stageField": {
            "action": {
              "add": "Add stage",
              "more": "More",
              "remove": "Remove stage"
            },
            "name": {
              "helpText": "This is used to identify the stage the proposal is in. For example: Community Review, Guardian Veto, or Founder Signoff",
              "label": "Name"
            },
            "number": "Stage {{stageNumber}}",
            "title": "Stage name"
          },
          "stageSettingsField": {
            "approvalThreshold": "Approval threshold",
            "earlyAdvance": "Early stage advance",
            "edit": "Edit settings",
            "expiration": "Stage expiration",
            "expirationPeriod": "Expiration period",
            "governanceType": "Governance type",
            "label": "Settings",
            "no": "Disabled",
            "votingPeriod": "Stage duration",
            "yes": "Enabled"
          },
          "type": {
            "ADVANCED": {
              "description": "Proposals advance across multiple stages.",
              "label": "Advanced"
            },
            "BASIC": {
              "description": "Proposals are decided on by a single body.",
              "label": "Basic"
            },
            "helpText": "This determines the amount of control and flexibility you need to design your governance process.",
            "label": "Governance designer"
          }
        },
        "metadata": {
          "description": {
            "helpText": "This is shown on the proposals list to help users understand the governance for proposals of this type.",
            "label": "Description"
          },
          "name": {
            "label": "Process name"
          },
          "processKey": {
            "helpText": "The key is part of the unique identifier for proposals of this type. Something like EIP would lead to EIP-1 and increment for each proposal.",
            "label": "Key"
          },
          "resources": {
            "helpText": "These are shown as links on the proposal list under the description as additional external resources."
          },
          "type": {
            "plugin": "plugin",
            "process": "governance process"
          }
        },
        "permissions": {
          "proposalCreation": {
            "bodies": {
              "error": "You must select at least one body.",
              "label": "Bodies"
            },
            "mode": {
              "anyDescription": "Any address can create proposals",
              "anyLabel": "Anyone",
              "bodiesDescription": "Members of the selected bodies",
              "bodiesLabel": "Members",
              "label": "Proposal creation eligibility"
            }
          }
        }
      },
      "createProcessPage": {
        "finalStep": "Publish process",
        "steps": {
          "METADATA": {
            "description": "Describe the governance process so visitors understand its purpose and how decisions are made. Any of these fields can be changed later via governance.",
            "name": "Process description",
            "title": "Describe new proposal type"
          },
          "PERMISSIONS": {
            "description": "Define who can create proposals of this type.",
            "name": "Proposal creation rules",
            "title": "Set proposal creation rules"
          },
          "STAGES": {
            "description": "Design how decisions are made in this type of proposal. A proposal can go through multiple sequential stages and have any number of governing bodies.",
            "name": "Governance design",
            "title": "Design the governance process"
          }
        },
        "submitHelpText": "You will have to sign two transactions.",
        "submitLabel": "Publish process"
      },
      "layoutWizardCreateProcess": {
        "name": "Create process"
      },
      "prepareProcessDialog": {
        "button": {
          "submit": "Prepare installation"
        },
        "description": "To publish your governance process, confirm the two onchain transactions in your wallet.",
        "step": {
          "PIN_METADATA": {
            "errorLabel": "Unable to pin data on IPFS",
            "label": "Pin data on IPFS"
          }
        },
        "title": "Publish governance process",
        "transactionInfoTitle": "Prepare installation"
      },
      "publishDaoDialog": {
        "button": {
          "submit": "Create DAO",
          "success": "View DAO"
        },
        "description": "To publish the DAO, confirm the onchain transaction in your wallet.",
        "step": {
          "PIN_METADATA": {
            "errorLabel": "Unable to pin data on IPFS",
            "label": "Pin data on IPFS"
          }
        },
        "title": "Publish DAO"
      },
      "publishProcessDialog": {
        "admin": {
          "button": {
            "submit": "Finalize installation"
          },
          "description": "To publish your governance process, confirm the two onchain transactions in your wallet.",
          "title": "Publish governance process",
          "transactionInfoTitle": "Finalize installation"
        },
        "default": {
          "button": {
            "submit": "Propose process"
          },
          "description": "To publish your governance process, confirm the two onchain transactions in your wallet.",
          "title": "Publish governance process",
          "transactionInfoTitle": "Propose process"
        }
      },

      "setupBodyDialog": {
        "a11y": {
          "description": "Create a new voting body for your DAO"
        },
        "externalAddress": {
          "address": {
            "helpText": "Add any address as a body, such as a Safe or Governor",
            "label": "External address"
          }
        },
        "metadata": {
          "name": {
            "label": "Body name"
          },
          "resources": {
            "helpText": "These are shown as links on the members list under the description as additional external resources."
          },
          "summary": {
            "helpText": "This is shown on the members list to help visitors understand what the body is responsible for.",
            "label": "Description"
          }
        },
        "select": {
          "external": {
            "description": "Add any address as a body, such as a Safe or Governor",
            "label": "External address"
          },
          "plugin": {
            "helpText": "This determines the governance the body uses to make decisions.",
            "label": "Governance type"
          }
        },
        "submit": "Save",
        "title": "Add voting body"
      },
      "setupStageSettingsDialog": {
        "a11y": {
          "description": "Configure the settings for the stage"
        },
        "action": {
          "cancel": "Cancel",
          "save": "Save"
        },
        "fields": {
          "stageApprovalsField": {
            "approve": {
              "helpText": "The number of bodies that must approve this proposal to advance it.",
              "label": "Approval threshold"
            },
            "summary": "of {{count}} bodies",
            "veto": {
              "helpText": "The number of bodies that must veto this proposal to stop it from advancing.",
              "label": "Veto threshold"
            }
          },
          "stageDurationField": {
            "helpText": "The period of time a proposal is active. Proposals can be created with a longer duration, but not shorter.",
            "infoText": "Recommended minimum voting period is 7 days.",
            "label": "Stage Duration"
          },
          "stageEarlyAdvanceField": {
            "helpText": "This allows a proposal to be advanced early to subsequent stages if it's approved before the voting period ends.",
            "label": "Early stage advance",
            "no": "Disabled",
            "yes": "Enabled"
          },
          "stageExpirationField": {
            "helpText": "This limits the amount of time after the voting period ends for advancing the proposal to the next stage.",
            "infoText": "Recommended minimum expiration time is 7 days.",
            "label": "Stage expiration",
            "no": "Disabled",
            "yes": "Enabled"
          },
          "stageTypeField": {
            "NORMAL": {
              "description": "Proposals pass the stage only if approved.",
              "label": "Approval"
            },
            "OPTIMISTIC": {
              "description": "Proposals pass the stage unless vetoed.",
              "label": "Veto"
            },
            "helpText": "This will determine the role that governance plays in the stage.",
            "label": "Governance type"
          }
        },
        "submit": "Save",
        "title": "Settings"
      }
    },
    "daos": {
      "aragonDemo": {
        "aragonDemoPageHeader": {
          "cta": "Create proposal",
          "stat": {
            "proposals": "Proposals",
            "treasury": "Treasury"
          }
        }
      },
      "boundless": {
        "boundlessPageHeader": {
          "actions": {
            "claim": {
              "description": "your $ZKC token",
              "title": "Claim"
            },
            "govern": {
              "description": "the protocol together",
              "title": "Govern"
            },
            "stake": {
              "description": "to participate",
              "title": "Stake"
            }
          },
          "info": "Boundless DAO is a community-led organization advancing the Boundless vision: bringing ZK to every blockchain, developer, and everyone in between.",
          "to": "to Boundless DAO",
          "welcome": "Welcome"
        }
      }
    },
    "dashboard": {
      "daoDashboardPage": {
        "aside": {
          "details": {
            "address": "DAO address",
            "chain": "Chain",
            "ens": "ENS",
            "launched": "Launched",
            "title": "Contract"
          },
          "links": "Resources"
        },
        "main": {
          "assets": {
            "title": "Assets"
          },
          "members": {
            "title": "Members"
          },
          "proposals": {
            "title": "Latest proposals"
          },
          "viewAll": "View all"
        }
      },
      "dashboardDefaultHeader": {
        "stat": {
          "members": "Members",
          "proposals": "Proposals",
          "treasury": "Treasury"
        }
      }
    },
    "explore": {
      "daoList": {
        "emptyState": {
          "description": "This will show relevant DAOs when available.",
          "heading": "No DAOs found"
        },
        "entity": "DAOs",
        "errorState": {
          "description": "There was an error loading the DAOs. Try again later.",
          "heading": "Error loading DAOs"
        },
        "searchPlaceholder": "Search by name, address, or ENS"
      },
      "exploreDao": {
        "createDao": "Create a DAO",
        "filter": {
          "all": "All DAOs",
          "member": "Member"
        }
      },
      "exploreDaosPage": {
        "doItYourself": {
          "actionLabel": "Developer portal",
          "subtitle": "Build your own custom Aragon OSx DAO or your own web application using our Governance UI Kit and App Template.",
          "title": "Do it yourself"
        },
        "enterpriseService": {
          "actionLabel": "Get in touch",
          "subtitle": "Let our team manage the complexities of governance so you can focus on building your product and community.",
          "title": "Enterprise service"
        },
        "hero": {
          "subtitle": "Explore the organizations using our modular governance stack to secure their onchain governance.",
          "title": "Governed on Aragon"
        },
        "noCodeSetup": {
          "actionLabel": "Create a DAO",
          "subtitle": "Easily deploy a new DAO on Aragon OSx in minutes with our simple, no-code deployment wizard.",
          "title": "No-code setup"
        },
        "section": {
          "cta": "Getting started",
          "daos": "Explore",
          "featured": "Featured"
        }
      }
    },
    "finance": {
      "assetInput": {
        "maxButtonLabel": "Max",
        "token": {
          "trigger": "Select"
        }
      },
      "assetList": {
        "emptyState": {
          "description": "This will show the DAO's onchain assets when available.",
          "heading": "No assets found"
        },
        "entity": "Assets",
        "errorState": {
          "description": "There was an error loading the assets. Try again later.",
          "heading": "Error loading assets"
        },
        "searchPlaceholder": "Search assets..."
      },
      "assetSelectionDialog": {
        "a11y": {
          "description": "Select the asset from the list below"
        },
        "title": "Select an asset"
      },
      "daoAssetsPage": {
        "aside": {
          "details": {
            "chain": "Chain",
            "title": "Details"
          }
        },
        "main": {
          "title": "Assets"
        }
      },
      "daoTransactionsPage": {
        "aside": {
          "details": {
            "chain": "Chain",
            "title": "Details"
          }
        },
        "main": {
          "title": "Transactions"
        }
      },
      "financeDetailsList": {
        "chain": "Chain",
        "octavDescription": "Octav provides advanced treasury analytics.",
        "octavLabel": "View on Octav",
        "title": "Vault",
        "vaultAddress": "Vault address",
        "vaultEns": "Vault ENS"
      },
      "transactionList": {
        "emptyState": {
          "description": "This will show the DAO's onchain actions when available.",
          "heading": "No transactions found"
        },
        "entity": "Transactions",
        "errorState": {
          "description": "There was an error loading the transactions. Try again later.",
          "heading": "Error loading transactions"
        }
      },
      "transferAssetForm": {
        "amount": {
          "label": "Token",
          "placeholder": "0"
        },
        "receiver": {
          "helpText": "The address to transfer assets to.",
          "label": "Recipient",
          "placeholder": "ENS or 0x…"
        }
      }
    },
    "governance": {
      "actionComposer": {
        "customItem": {
          "ADD_CONTRACT": "Add contract address",
          "RAW_CALLDATA": "Enter raw calldata"
        },
        "nativeGroup": {
          "OSX": "DAO"
        },
        "nativeItem": {
          "MetadataPluginUpdate": "Set metadata",
          "MetadataUpdate": "Set metadata",
          "Transfer": "Transfer"
        },
        "placeholder": "Search by action, contract name, or address",
        "rawCalldataFunction": "Unknown",
        "selectItem": "Add action"
      },
      "createProposalForm": {
        "actions": {
          "addAction": {
            "custom": "Custom",
            "default": "Action",
            "walletConnect": "Connect"
          },
          "editAction": {
            "down": "Move down",
            "remove": "Remove",
            "up": "Move up"
          }
        },
        "metadata": {
          "actions": {
            "helpText": "Actions are onchain transactions that can be executed if the proposal passes.",
            "label": "Yes",
            "title": "Add actions"
          },
          "body": {
            "helpText": "This is the full proposal text that is viewable only on the proposal details page.",
            "title": "Body"
          },
          "resources": {
            "helpText": "These are shown as links on the proposal page. They can be used to help members understand the proposal."
          },
          "summary": {
            "helpText": "This is shown at the top of the proposal page and on the proposal list so anyone can quickly understand what it's about.",
            "title": "Summary"
          },
          "title": {
            "title": "Proposal title"
          }
        }
      },
      "createProposalPage": {
        "finalStep": "Publish proposal",
        "steps": {
          "ACTIONS": {
            "description": "Add actions to govern the DAO, interact with smart contracts, or connect to other applications. They will execute in the order listed on this page.",
            "name": "Add actions",
            "title": "Add actions"
          },
          "METADATA": {
            "description": "Describe the proposal so voters have the information they need to understand it and make a decision.",
            "name": "Describe proposal",
            "title": "Describe proposal"
          },
          "SETTINGS": {
            "description": "Configure the settings for this proposal.",
            "name": "Proposal settings",
            "title": "Proposal settings"
          }
        },
        "submitLabel": "Publish proposal"
      },
      "daoMemberDetailsPage": {
        "aside": {
          "details": {
            "address": "Address",
            "ens": "ENS",
            "firstActivity": "First activity",
            "title": "Details"
          },
          "efpCard": {
            "title": "Ethereum Follow Protocol"
          }
        },
        "header": {
          "breadcrumb": {
            "members": "Members"
          },
          "stat": {
            "latestActivity": "Latest activity",
            "latestActivityUnit": "{{unit}} ago"
          }
        },
        "main": {
          "daoMemberships": {
            "title": "Other DAO memberships"
          },
          "proposalCreation": {
            "title": "Proposal creation"
          },
          "votingActivity": {
            "title": "Voting activity"
          }
        },
        "notFound": {
          "action": "Explore members",
          "description": "We couldn't find the member you're looking for.",
          "title": "Member not found"
        }
      },
      "daoMemberList": {
        "empty": {
          "description": "This DAO currently has no members.",
          "title": "No members found"
        },
        "entity": "Members",
        "error": {
          "description": "There was an error loading the DAO members. Try again later.",
          "title": "Error loading members"
        }
      },
      "daoMembersPage": {
        "main": {
          "title": "Members"
        }
      },
      "daoProposalDetailsPage": {
        "aside": {
          "details": {
            "creator": "Proposed by",
            "id": "ID",
            "onChainId": "Onchain ID",
            "published": "Published",
            "status": "Status",
            "title": "Details"
          },
          "links": {
            "title": "Links"
          }
        },
        "header": {
          "breadcrumb": {
            "proposals": "Proposals"
          }
        },
        "main": {
          "actions": {
            "header": "Actions"
          },
          "description": {
            "header": "Proposal",
            "readLess": "Read less",
            "readMore": "Read more"
          },
          "voting": "Voting"
        },
        "notFound": {
          "action": "Explore proposals",
          "description": "We couldn't find the proposal you're looking for.",
          "title": "Proposal not found"
        }
      },
      "daoProposalList": {
        "empty": {
          "description": "This will show relevant proposals when available.",
          "title": "No proposals found"
        },
        "entity": "Proposals",
        "error": {
          "description": "There was an error loading the DAO proposals. Try again later.",
          "title": "Error loading proposals"
        },
        "groupTab": "All proposals"
      },
      "daoProposalsPage": {
        "aside": {
          "stats": "All proposals"
        },
        "main": {
          "action": "Proposal",
          "title": "Proposals"
        }
      },
      "efpCard": {
        "cta": "View on EFP",
        "followers": "Followers",
        "following": "Following",
        "info": "The Ethereum Follow Protocol is an onchain social graph for Ethereum."
      },
      "executeDialog": {
        "buttons": {
          "submit": "Execute proposal",
          "success": "View proposal"
        },
        "description": "To execute the proposal, confirm the onchain transaction in your wallet.",
        "title": "Execute proposal"
      },
      "layoutWizardCreateDao": {
        "name": "Create DAO"
      },
      "layoutWizardCreateProposal": {
        "name": "Create proposal",
        "namePlugin": "{{plugin}}: Create proposal"
      },
      "permissionCheckDialog": {
        "a11y": {
          "description": "Checking if user has the permission to perform the action."
        },
        "action": "OK",
        "loading": "Checking permissions",
        "or": "or",
        "proposal": {
          "description": "You don’t meet the proposal creation requirements.",
          "title": "Not eligible to create a proposal"
        },
        "vote": {
          "description": "You didn’t meet the voting requirements at the block the proposal was created.",
          "title": "Not eligible to vote"
        }
      },
      "proposalExecutionStatus": {
        "buttons": {
          "execute": "Execute",
          "executed": "Executed",
          "failed": "Execution failed",
          "tryAgain": "Try again"
        },
        "notExecutable": "The proposal must pass before its actions can be executed."
      },
      "proposalListStats": {
        "button": "View governance settings",
        "executed": "Executed",
        "mostRecent": "Most recent",
        "recentUnit": " {{unit}} ago",
        "total": "Total",
        "types": "Types"
      },
      "publishProposalDialog": {
        "button": {
          "submit": "Publish proposal",
          "success": "View proposal"
        },
        "description": "To publish your proposal, confirm the onchain transaction in your wallet.",
        "step": {
          "PIN_METADATA": {
            "errorLabel": "Unable to pin data on IPFS",
            "label": "Pin data on IPFS"
          }
        },
        "title": "Publish proposal"
      },
      "selectPluginDialog": {
        "action": {
          "cancel": "Cancel",
          "select": "Create proposal"
        },
        "process": {
          "description": "Select the governance process to use for creating the proposal.",
          "title": "Select process"
        },
        "proposal": {
          "description": "Select the proposal type you want to create.",
          "title": "Create proposal"
        }
      },
      "verifySmartContractDialog": {
        "action": {
          "add": "Add contract",
          "cancel": "Cancel",
          "verify": "Verify contract"
        },
        "description": "The write functions on this contract can be used to add actions.",
        "smartContractLabel": "Address",
        "step": {
          "abi": {
            "default": "Retrieve ABI",
            "warning": "Unable to retrieve ABI"
          },
          "proxy": {
            "default": "Detect proxy contract"
          },
          "verify": {
            "default": "Verify contract",
            "warning": "Unable to verify contract"
          }
        },
        "title": "Add contract address",
        "unverified": "Unverified contract"
      },
      "voteDialog": {
        "button": {
          "submit": "Submit vote",
          "success": "View proposal"
        },
        "description": "To submit your vote, confirm the onchain transaction in your wallet.",
        "title": "Submit vote"
      },
      "voteList": {
        "empty": {
          "description": "No votes found.",
          "title": "No votes found"
        },
        "error": {
          "description": "There was an error loading the votes. Try again later.",
          "title": "Error loading votes"
        }
      },
      "walletConnectActionDialog": {
        "connect": {
          "action": {
            "cancel": "Cancel",
            "connect": "Connect dApp",
            "retry": "Retry"
          },
          "description": "To connect, open the dApp, copy the WalletConnect QR code to your clipboard, and paste it here.",
          "title": "Connect to dApp",
          "uriField": {
            "placeholder": "wc:…"
          }
        },
        "listener": {
          "action": {
            "addActions": "Add {{count}} actions",
            "cancel": "Cancel",
            "open": "Open dApp"
          },
          "helpLink": "Having issues?",
          "info_1": "You can now interact with ",
          "info_2": " on behalf of your DAO. Instead of going to your wallet, transactions will be made available to add as actions to the proposal.",
          "progress": "Listening to dApp"
        }
      }
    },
    "plugins": {
      "admin": {
        "adminGovernanceSettings": {
          "auto": "Automatic",
          "members": "Admin members",
          "proposalCreation": "Proposal creation",
          "proposalExecution": "Proposal execution"
        },
        "adminManageMembers": {
          "button": "Manage admins",
          "dialog": {
            "action": {
              "cancel": "Cancel",
              "update": "Update admins"
            },
            "description": "Add or remove the addresses that should be able to make any change to the DAO without a proposal.",
            "title": "Manage admins"
          }
        },
        "adminMemberInfo": {
          "admins": "Admins",
          "membersCount": "{{count}} addresses"
        },
        "adminPermissionCheckProposalCreation": {
          "function": "Proposal creation",
          "pluginLabelName": "Name",
          "requirement": "Admin only"
        },
        "adminPublishManageMembersDialog": {
          "button": {
            "submit": "Update admins"
          },
          "description": "To update admins, confirm the onchain transaction in your wallet.",
          "title": "Update admins"
        },
        "adminSettingsPanel": {
          "title": "Admin"
        },
        "adminUninstallPlugin": {
          "adminUninstallProcessDialogCreate": {
            "description": "To remove all admins, you need to first create at least one other governance process for your DAO.",
            "heading": "No governance process found",
            "label": "Create governance process",
            "title": "Remove all admins"
          },
          "adminUninstallProcessDialogSelect": {
            "a11y": {
              "description": "You have to create and pass a proposal in another governance process to remove admin control from the DAO. This should only be done when the DAO is ready and no longer requires admin control."
            },
            "action": {
              "cancel": "Cancel",
              "select": "Select process"
            },
            "descriptionFirstLine": "You have to create and pass a proposal in another governance process to remove admin control from the DAO.",
            "descriptionSecondLine": "This should only be done when the DAO is ready and no longer requires admin control.",
            "title": "Remove all admins"
          },
          "label": "Remove all admins"
        },
        "adminVotingTerminal": {
          "description": "Proposals created by admins pass automatically without any governance.",
          "title": "Automatic execution"
        }
      },
      "capitalDistributor": {
        "capitalDistributorCampaignList": {
          "emptyState": {
            "description": "This will show your campaigns when available.",
            "heading": "No campaigns found"
          },
          "entity": "Campaigns",
          "errorState": {
            "description": "There was an error loading the campaigns. Try again later.",
            "heading": "Error loading campaigns"
          },
          "filter": {
            "claimable": "Claimable",
            "claimed": "Claimed"
          },
          "item": {
            "amount": "Amount",
            "value": "Value"
          }
        },
        "capitalDistributorClaimDialog": {
          "details": {
            "amount": "Total amount",
            "claimable": "Claimable",
            "deadline": "Deadline",
            "resources": "Resources",
            "status": "Status",
            "timeLeft": "{{time}} left",
            "type": "Type",
            "value": "Value"
          },
          "inputs": {
            "helpText": "The address to get the payout",
            "recipient": "Recipient"
          },
          "submit": "Claim"
        },
        "capitalDistributorClaimTransactionDialog": {
          "description": "Confirm the onchain transaction to claim your rewards",
          "submit": "Claim rewards",
          "successLinkLabel": "View rewards",
          "title": "Claim Transaction"
        },
        "capitalDistributorRewardsAside": {
          "stats": {
            "claimableCount": "Claimable campaigns",
            "claimableNow": "Claimable now",
            "latestClaim": "Latest claim",
            "recentUnit": " {{unit}} ago",
            "totalEarned": "Total earned"
          }
        },
        "capitalDistributorRewardsPage": {
          "main": {
            "connect": {
              "action": "Connect",
              "description": "Connect your wallet to view your rewards.",
              "heading": "Connect your wallet"
            },
            "title": "Rewards"
          }
        },
        "meta": {
          "link": {
            "rewards": "Rewards"
          }
        }
      },
      "multisig": {
        "meta": {
          "setup": {
            "description": "Designated members must reach a minimum approval threshold",
            "name": "Multisig"
          }
        },
        "multisigActions": {
          "MultisigAddMembers": "Add members",
          "MultisigRemoveMembers": "Remove members",
          "UpdateMultiSigSettings": "Update settings"
        },
        "multisigCreateProposalSettingsForm": {
          "endTime": {
            "helpText": "After a proposal expires, you can't approve or execute it.",
            "infoText": "It’s recommended to have an expiration time of {{days}} days to maintain a clean proposal list.",
            "label": "Expiration time"
          },
          "startTime": {
            "helpText": "This is the time that the proposal becomes available for approvals.",
            "label": "Approval start time"
          }
        },
        "multisigGovernanceSettings": {
          "anyWallet": "Any wallet",
          "approvals": "{{min}} of {{max}} members",
          "members": "Multisig members",
          "minimumApproval": "Minimum approval",
          "minimumVeto": "Minimum veto",
          "proposalCreation": "Proposal creation"
        },
        "multisigMembersInfo": {
          "eligibleVoters": "Eligible voters",
          "linkDescription": "View all members",
          "membersCount": "See {{count}} addresses",
          "membersLabel": "Members",
          "multisigMembers": "Multisig members"
        },
        "multisigPermissionCheckProposalCreation": {
          "function": "Proposal creation",
          "pluginLabelName": "Name",
          "requirement": "Multisig member"
        },
        "multisigPermissionCheckVoteSubmission": {
          "createdAt": "Created",
          "membership": "Your membership",
          "nonMember": "Not a member"
        },
        "multisigProcessBodyField": {
          "membersDefinition": "{{count}} members",
          "membersTerm": "Members",
          "thresholdDefinition": "{{threshold}} of {{count}}",
          "thresholdTerm": "Multisig threshold"
        },
        "multisigProposalVotingSummary": {
          "approvalLabel": "approval",
          "approved": "approved",
          "memberCount": "of {{count}} members",
          "notApproved": "did not approve",
          "notVetoed": "did not veto",
          "optimisticApprovalLabel": "veto",
          "vetoed": "vetoed"
        },
        "multisigRemoveMembersAction": {
          "dialog": {
            "heading": "Remove members"
          }
        },
        "multisigSetupGovernance": {
          "minimumApproval": {
            "alert": {
              "majority": "Proposal will be approved by majority",
              "minority": "Proposals could be approved by a minority rather than a majority."
            },
            "helpText": "At least this many members will have to approve proposals.",
            "label": "Approval threshold",
            "total": "of {{total}} addresses"
          },
          "onlyListed": {
            "anyWallet": {
              "description": "Any connected address.",
              "label": "Any wallet"
            },
            "helpText": "Specify who can create proposals.",
            "label": "Proposal creation",
            "members": {
              "description": "Only approved addresses.",
              "label": "Members"
            }
          }
        },
        "multisigSetupMembership": {
          "helpText": "These addresses will be the only ones able to participate.",
          "item": {
            "alreadyMember": "Address is already a member of the DAO"
          },
          "label": "Members"
        },
        "multisigSubmitVote": {
          "approve": "Approve proposal",
          "approved": "Approved",
          "veto": "Veto proposal",
          "vetoed": "Vetoed"
        },
        "multisigVoteList": {
          "entity": "Votes"
        }
      },
      "spp": {
        "advanceStageDialog": {
          "button": {
            "submit": "Advance",
            "success": "View proposal"
          },
          "description": "To advance the proposal to the next stage, confirm the onchain transaction in your wallet.",
          "title": "Advance proposal"
        },
        "sppCreateProposalSettingsForm": {
          "startTime": {
            "helpText": "The first stage's voting period begins at this time.",
            "label": "Stage 1 start time"
          }
        },
        "sppGovernanceSettings": {
          "default": {
            "address": "Address",
            "name": "ENS Name"
          },
          "numberOfStages": "Number of stages"
        },
        "sppInvalidAddressConnectedDialog": {
          "action": "Close",
          "description": "You are not connected to the correct address. If you are one of its owners, you can connect it with WalletConnect.",
          "title": "Not eligible to vote"
        },
        "sppProposalListItem": {
          "stage": "Stage {{stageIndex}}"
        },
        "sppReportProposalResultDialog": {
          "button": {
            "submit": "Submit vote",
            "success": "View proposal"
          },
          "description": "To submit your vote, confirm the onchain transaction in your wallet.",
          "title": "Submit vote",
          "voteDescription": {
            "approve": "to approve",
            "veto": "to veto"
          }
        },
        "sppStageStatus": {
          "button": {
            "advance": "Advance proposal",
            "advanced": "Proposal advanced",
            "vote": "Vote on proposal"
          },
          "expiredAdvance": "Proposal not advanced in time",
          "expiredExecute": "Proposal not executed in time"
        },
        "sppVotingTerminalBodyBreakdownDefault": {
          "expired": {
            "approve": "Did not approve",
            "veto": "Did not veto"
          },
          "vote": {
            "approve": "Not approved yet",
            "veto": "Not vetoed yet"
          },
          "voted": {
            "approve": "Approved",
            "veto": "Vetoed"
          }
        },
        "sppVotingTerminalBodyVoteDefault": {
          "approve": "Approve proposal",
          "approved": "Approved",
          "helpText": "If you are an owner of this address you can connect with WalletConnect to vote on this proposal.",
          "veto": "Veto proposal",
          "vetoed": "Vetoed"
        },
        "sppVotingTerminalStageBodySummaryFooter": {
          "actionRequired": "required to {{action}}",
          "thresholdLabel": "{{count}} {{entityType}}"
        },
        "sppVotingTerminalStageTimelock": {
          "active": {
            "description": "Ends {{date}}",
            "heading": "Timelock active"
          },
          "complete": {
            "description": "Ended {{date}}",
            "heading": "Timelock ended"
          },
          "pending": {
            "description": "Starts once the previous stage is advanced",
            "heading": "Timelock pending"
          }
        }
      },
      "token": {
        "meta": {
          "setup": {
            "description": "Majority voting based on token voting power",
            "name": "Token voting"
          }
        },
        "tokenActions": {
          "Mint": "Mint",
          "UpdateVoteSettings": "Update settings"
        },
        "tokenApproveNftDialog": {
          "UNLOCK": {
            "description": "To unlock your tokens, confirm the two onchain transactions in your wallet.",
            "nftName": "Lock NFT",
            "submit": "Approve NFT",
            "title": "Approve unlocking"
          }
        },
        "tokenApproveTokensDialog": {
          "LOCK": {
            "description": "To lock your tokens, confirm the two onchain transactions in your wallet.",
            "submit": "Approve tokens",
            "title": "Approve locking"
          },
          "WRAP": {
            "description": "To wrap your tokens, confirm the two onchain transactions in your wallet.",
            "submit": "Approve tokens",
            "title": "Approve wrapping"
          }
        },
        "tokenCreateProposalSettingsForm": {
          "endTime": {
            "infoText": "The minimum duration is {{days}} days, {{hours}} hours, and {{minutes}} minutes, set by DAO governance.",
            "label": "Voting duration / end time"
          },
          "startTime": {
            "label": "Voting start time"
          }
        },
        "tokenDelegationForm": {
          "delegate": {
            "helpText": "Enter the address where you want to delegate your current or future token balance's voting power.",
            "label": "Your delegation",
            "placeholder": "ENS or 0x…"
          },
          "dialog": {
            "button": {
              "submit": "Delegate",
              "success": "View members"
            },
            "description": "To delegate to this address, confirm the onchain transaction in your wallet.",
            "title": "Delegate"
          },
          "info": "Delegating increases the voting power of the address above by your balance. If you delegate to someone else, you can't vote until you reclaim your voting power.",
          "selection": {
            "label": "Who would you like to delegate to?",
            "option": {
              "other": "Someone else",
              "self": "Yourself"
            }
          },
          "submit": "Delegate voting power"
        },
        "tokenGovernanceSettings": {
          "approvalThreshold": "Support threshold",
          "duration": "{{days}} days {{hours}} hours {{minutes}} minutes",
          "earlyExecution": "Early execution",
          "minimumDuration": "Minimum duration",
          "minimumParticipation": "Minimum participation",
          "no": "Disabled",
          "participation": "≥ {{participation}}  (≥ {{tokenValue}} {{tokenSymbol}})",
          "proposalAccess": "Members with ≥ {{balance}} {{symbol}} voting power or balance",
          "proposalThreshold": "Proposal threshold",
          "threshold": "> {{threshold}}",
          "vetoThreshold": "Veto support threshold",
          "voteChange": "Vote change",
          "yes": "Enabled"
        },
        "tokenLockForm": {
          "approveTransactionInfoTitle": "Approve {{symbol}}",
          "chart": {
            "now": "Now",
            "votingPower": "Voting power"
          },
          "footerInfo": "Locking tokens will transfer them out of your wallet to the locking contract, where they can be withdrawn back to your wallet after the minimum locktime.",
          "locks": "View {{count}} locks",
          "percentage": {
            "0": "None",
            "100": "100%",
            "25": "25%",
            "50": "50%",
            "75": "75%"
          },
          "submit": {
            "approve": "Approve {{symbol}}",
            "lock": "Lock {{symbol}}"
          }
        },
        "tokenLockList": {
          "empty": {
            "description": "This will show relevant locks when available.",
            "title": "No locks found"
          },
          "entity": "veLocks",
          "error": {
            "description": "There was an error loading the locks. Try again later.",
            "title": "Error loading locks"
          },
          "item": {
            "actions": {
              "unlock": "Unlock {{symbol}}",
              "withdraw": "Withdraw {{symbol}}"
            },
            "approveTransactionInfoTitle": "Approve NFT #{{tokenId}}",
            "metrics": {
              "locked": "Locked",
              "multiplier": "Multiplier",
              "votingPower": "Voting power"
            },
            "minLockTimeLeftSuffix": "left until unlockable",
            "statusLabel": {
              "active": "Active",
              "available": "Available",
              "cooldown": "In cooldown",
              "warmup": "In warmup"
            },
            "timeLeftSuffix": "left",
            "withdrawTimeLeftSuffix": "left until you can withdraw"
          }
        },
        "tokenLockUnlockDialog": {
          "lock": {
            "description": "To lock your {{symbol}}, confirm the onchain transaction in your wallet.",
            "submit": "Lock",
            "success": "View your veLock",
            "title": "Lock {{symbol}}",
            "transactionInfoTitle": "Lock {{symbol}}"
          },
          "unlock": {
            "description": "To unlock your {{symbol}}, confirm the onchain transaction in your wallet.",
            "submit": "Unlock",
            "success": "View locks",
            "title": "Unlock {{symbol}}",
            "transactionInfoTitle": "Unlock {{symbol}}"
          },
          "withdraw": {
            "description": "To withdraw your {{symbol}}, confirm the onchain transactions in your wallet.",
            "submit": "Withdraw",
            "success": "View locks",
            "title": "Withdraw {{symbol}}",
            "transactionInfoTitle": "Withdraw {{symbol}}"
          }
        },
        "tokenLocksDialog": {
          "description": "Unlock or withdraw your {{symbol}} tokens",
          "title": "Your locks"
        },
        "tokenMemberInfo": {
          "distribution": "Distribution",
          "eligibleVoters": "Eligible voters",
          "members": "Members",
          "supply": "Supply",
          "tokenDistribution": "{{count}} token holders",
          "tokenHolders": "Token holders",
          "tokenLabel": "Token",
          "tokenNameAndSymbol": "{{tokenName}} ({{tokenSymbol}})",
          "tokenSupply": "{{supply}} {{symbol}}"
        },
        "tokenMemberList": {
          "entity": "Members"
        },
        "tokenMemberPanel": {
          "tabs": {
            "DELEGATE": "Delegate",
            "LOCK": "Lock",
            "WRAP": "Wrap"
          }
        },
        "tokenMemberStats": {
          "delegations": "Delegations",
          "tokenBalance": "Token balance",
          "votingPower": "Voting power"
        },
        "tokenMintTokensAction": {
          "address": {
            "label": "Address",
            "placeholder": "ENS or 0x…"
          },
          "amount": {
            "label": "Amount",
            "placeholder": "0 {{symbol}}"
          }
        },
        "tokenPermissionCheckProposalCreation": {
          "function": "Proposal creation",
          "pluginNameLabel": "Name",
          "userTokenBalance": "Your balance",
          "userVotingPower": "Your voting power"
        },
        "tokenPermissionCheckVoteSubmission": {
          "createdAt": "Created",
          "membership": "Your voting power"
        },
        "tokenProcessBodyField": {
          "disabled": "Disabled",
          "distributionTerm": "Distribution",
          "earlyExecution": "Early execution",
          "enabled": "Enabled",
          "holders": "{{count}} token holders",
          "minDurationDefinition": "{{days}} days {{hours}} hours {{minutes}} minutes",
          "minDurationTerm": "Minimum duration",
          "minParticipationDefinition": "≥ {{minParticipation}}%",
          "minParticipationTerm": "Minimum participation",
          "supplyTerm": "Supply",
          "supportDefinition": "> {{threshold}}%",
          "supportTerm": "Support threshold",
          "tokenTerm": "Token",
          "voteChange": "Vote change"
        },
        "tokenProposalCreationSettings": {
          "helpText": "The voting power or token balance required to create proposals.",
          "label": "Minimum requirement",
          "placeholder": "≥ 1"
        },
        "tokenProposalVotingSummary": {
          "approved": "approved",
          "notApproved": "did not approve",
          "notVetoed": "did not veto",
          "optimisticSupportLabel": "veto support",
          "supportLabel": "support",
          "vetoed": "vetoed",
          "votesDescription": "of {{details}}"
        },
        "tokenSetupGovernance": {
          "earlyExecution": {
            "helpText": "Allows a proposal to be executed before the voting period ends. This is only possible if the proposal meets the support threshold, satisfies the minimum participation, and can’t be overturned by remaining voters.",
            "label": "Early execution",
            "switch": {
              "label": "Enabled"
            }
          },
          "eligibleField": {
            "anyWallet": {
              "description": "Any connected address.",
              "label": "Any wallet"
            },
            "helpText": "Specify who can create proposals and the minimum token requirement.",
            "label": "Who is eligible",
            "members": {
              "description": "Only members with at least this much voting power or token balance can create proposals.",
              "label": "Members"
            }
          },
          "minDuration": {
            "alertInfo": "Ensure members have enough time to vote. It's recommended to set this to at least 1 day.",
            "helpText": "The shortest time a proposal is open for voting. Proposals can have a longer duration but not shorter.",
            "label": "Minimum duration"
          },
          "minParticipation": {
            "helpText": "The percentage of tokens that participate in a proposal, out of the total supply, must be greater than or equal to this value.",
            "label": "Minimum participation"
          },
          "minVotingPower": {
            "helpText": "Only members with at least this much voting power or token balance can create proposals.",
            "label": "Minimum requirement"
          },
          "supportThreshold": {
            "alert": {
              "majority": "Proposal will be approved by majority",
              "minority": "Proposals could be approved by a minority rather than a majority."
            },
            "helpText": "The percentage of tokens that vote 'Yes' in support of a proposal, out of all tokens that have voted, must be greater than this value.",
            "label": "Support threshold",
            "tag": {
              "no": "No",
              "yes": "Yes"
            }
          },
          "voteChange": {
            "helpText": "Allows voters to change their vote during the voting period. This prevents the body from giving early approval or veto.",
            "label": "Vote change",
            "switch": {
              "label": "Enabled"
            }
          }
        },
        "tokenSetupMembership": {
          "createToken": {
            "distribute": {
              "helpText": "These addresses will receive newly minted tokens.",
              "label": "Token recipients"
            },
            "member": {
              "action": {
                "add": "Add",
                "remove": "Remove"
              },
              "address": {
                "label": "Address",
                "placeholder": "ENS or 0x…"
              },
              "tokens": {
                "label": "Tokens"
              }
            },
            "name": {
              "helpText": "This is the full name of the token. For example: Uniswap",
              "label": "Token name"
            },
            "symbol": {
              "helpText": "This is the abbreviated ticker of the token. For example: UNI",
              "label": "Token symbol"
            }
          },
          "importToken": {
            "alert": {
              "infoLabel": "Learn more",
              "notErc20Compatible": {
                "description1": "The address isn’t a valid ERC-20 address and therefore can't be used in governance.",
                "message": "Not compatible"
              },
              "notGovernanceCompatible": {
                "description1": "This token must be wrapped by its holders to be used in governance.",
                "description2": "Token holders will be able to wrap their tokens at any time to receive equivalent governance tokens, which can be used to vote on proposals. They can unwrap at any time to receive their original tokens.",
                "message": "Requires wrapping"
              }
            },
            "helpText": "The address must be an ERC-20 token contract deployed on the same chain as your DAO.",
            "label": "Token address",
            "step": {
              "delegation": "Delegation compatible",
              "erc20": "ERC-20 token standard",
              "governance": "Governance compatible"
            }
          },
          "type": {
            "helpText": "You can either create a new ERC-20 token to be used in governance or import an existing one.",
            "label": "ERC-20 token",
            "option": {
              "create": "Create new token",
              "import": "Import token"
            }
          }
        },
        "tokenSubmitVote": {
          "buttons": {
            "cancel": "Cancel",
            "change": "Change vote",
            "default": "Vote on proposal",
            "submit": "Submit vote",
            "submitChange": "Submit change",
            "submitted": "Vote submitted"
          },
          "options": {
            "abstain": "Abstain",
            "approveLabel": "approve",
            "approveNoDescription": ", I don't approve",
            "approveYesDescription": ", I approve",
            "label": "Do you want to {{label}} this proposal?",
            "no": "No",
            "vetoLabel": "veto",
            "vetoNoDescription": ", I don't veto",
            "vetoYesDescription": ", I veto",
            "yes": "Yes"
          },
          "voteDescription": {
            "approve": "to approve",
            "veto": "to veto"
          }
        },
        "tokenVoteList": {
          "description": {
            "approve": "to approve",
            "veto": "to veto"
          },
          "entity": "Votes"
        },
        "tokenWrapForm": {
          "approveTransactionInfoTitle": "Approve {{symbol}}",
          "footerInfo": "Wrapping tokens will transfer them out of your wallet to the wrapping contract, where they can be withdrawn back to your wallet at any time.",
          "info": "Wrap {{underlyingSymbol}} to increase your voting power.",
          "percentage": {
            "0": "None",
            "100": "100%",
            "25": "25%",
            "50": "50%",
            "75": "75%"
          },
          "submit": {
            "approve": "Approve {{underlyingSymbol}}",
            "unwrap": "Unwrap {{amount}} {{symbol}}",
            "wrap": "Wrap {{underlyingSymbol}}"
          }
        },
        "tokenWrapUnwrapDialog": {
          "unwrap": {
            "description": "To unwrap your tokens, confirm the two onchain transactions in your wallet.",
            "submit": "Unwrap tokens",
            "success": "View members",
            "title": "Unwrap tokens",
            "transactionInfoTitle": "Unwrap {{symbol}}"
          },
          "wrap": {
            "description": "To wrap your tokens, confirm the two onchain transactions in your wallet.",
            "submit": "Wrap tokens",
            "success": "View members",
            "title": "Wrap tokens",
            "transactionInfoTitle": "Wrap {{symbol}}"
          }
        }
      }
    },
    "settings": {
      "daoPluginInfo": {
        "bodyName": "Body name",
        "processKey": "Process key",
        "processName": "Process name",
        "tabs": {
          "CONTRACT": "Contract",
          "DESCRIPTION": "Description",
          "SETTINGS": "Settings"
        }
      },
      "daoSettingsInfo": {
        "chain": "Chain",
        "ens": "ENS name",
        "links": "Resources",
        "name": "Name",
        "notChangeable": "Not changeable",
        "readLess": "Read less",
        "readMore": "Read more",
        "summary": "Description"
      },
      "daoSettingsPage": {
        "aside": {
          "versionInfoTitle": "Contracts"
        },
        "main": {
          "governanceAction": "Add governance",
          "governanceInfoTitle": "Governance",
          "membersInfoTitle": "Members",
          "settingsInfoTitle": "DAO",
          "title": "Settings"
        }
      },
      "daoVersionInfo": {
        "governanceValue": "{{name}} v{{release}}.{{build}}",
        "osLabel": "Operating system",
        "osValue": "Aragon OSx v{{version}}"
      },
      "prepareDaoContractsUpdateDialog": {
        "button": {
          "submit": "Prepare installation"
        },
        "description": "To publish the contract upgrades, confirm the two onchain transactions in your wallet.",
        "title": "Publish contract upgrades",
        "transactionInfoTitle": "Prepare installation"
      },
      "publishDaoContractsUpdateDialog": {
        "button": {
          "submit": "Propose contract upgrades"
        },
        "description": "To publish the contract upgrades, confirm the two onchain transactions in your wallet.",
        "title": "Publish contract upgrades",
        "transactionInfoTitle": "Propose contract upgrades"
      },
      "updateDaoContracts": {
        "button": "Upgrade contracts",
        "description": "There are updates available for Aragon OSx and its plugin contracts."
      },
      "updateDaoContractsCard": {
        "releaseNotes": "Release notes",
        "versionUpdate": "Update {{from}} → {{to}}"
      },
      "updateDaoContractsListDialog": {
        "action": {
          "cancel": "Cancel",
          "confirm": "Propose"
        },
        "description": "New versions of the following contracts have been released by the Aragon team. To perform an upgrade, you will have to create a proposal and execute it.",
        "osxUpdate": {
          "name": "Operating system",
          "smartContractName": "Aragon OSx"
        },
        "title": "Review contracts to upgrade"
      }
    },
    "shared": {
      "addressesInput": {
        "container": {
          "add": "Add"
        },
        "item": {
          "input": {
            "error": {
              "alreadyInList": "Address has already been added.",
              "invalid": "Address is not valid."
            },
            "label": "Member",
            "placeholder": "ENS or 0x…"
          },
          "remove": "Remove member"
        }
      },
      "advancedDateInput": {
        "duration": {
          "days": "Days",
          "error": {
            "minDuration": "Duration must be at least {{value}}."
          },
          "hours": "Hours",
          "label": "Duration",
          "minutes": "Minutes"
        },
        "fixed": {
          "date": "Date",
          "label": "Specific date & time",
          "time": "Time"
        },
        "now": "Now",
        "timezone": "Timezone"
      },
      "autocompleteInput": {
        "menu": {
          "select": "Select"
        }
      },
      "confirmWizardExit": {
        "message": "If you leave this process, you'll lose all the information you've entered so far."
      },
      "daoPluginInfo": {
        "launchedAt": "Plugin launched",
        "plugin": "Plugin address",
        "pluginVersionInfo": "{{name}} v{{release}}.{{build}}"
      },
      "errorFeedback": {
        "description": "If you'd like to help, you can report the issue to our team.",
        "link": {
          "explore": "Explore DAOs",
          "report": "Report issue"
        },
        "title": "Something went wrong"
      },
      "formField": {
        "error": {
          "max": "{{name}} must be less than {{value}}.",
          "min": "{{name}} must be greater than {{value}}.",
          "pattern": "Invalid {{name}} format.",
          "required": "{{name}} is mandatory.",
          "validate": "{{name}} is invalid."
        }
      },
      "governanceBodyInfo": {
        "external": "External address"
      },
      "page": {
        "header": {
          "readLess": "Read less",
          "readMore": "Read more"
        }
      },
      "resourcesInput": {
        "add": "Add",
        "item": {
          "labelInput": {
            "title": "Link text"
          },
          "linkInput": {
            "placeholder": "https://",
            "title": "URL"
          },
          "removeResource": "Remove"
        },
        "title": "Resources"
      },
      "transactionDialog": {
        "footer": {
          "approve": {
            "error": "Resend to wallet",
            "idle": "Sign transaction",
            "pending": "Awaiting signature"
          },
          "cancel": "Cancel",
          "proceedAnyway": "Continue in background",
          "retry": "Retry"
        },
        "step": {
          "APPROVE": {
            "addon": "Wallet",
            "errorLabel": "Rejected by wallet",
            "label": "Sign transaction"
          },
          "CONFIRM": {
            "addon": "Details",
            "errorLabel": "Confirmation failed",
            "label": "Confirm transaction"
          },
          "INDEXING": {
            "errorLabel": "Indexing failed",
            "label": "Index onchain data"
          },
          "PREPARE": {
            "errorLabel": "Unable to prepare transaction",
            "label": "Prepare transaction"
          }
        }
      },
      "transactionStatus": {
        "info": {
          "current": "Step {{current}}",
          "total": "of {{total}}"
        }
      },
      "useApplicationVersion": {
        "version": "v{{version}}",
        "versionEnv": "v{{version}} ({{env}})"
      },
      "wizard": {
        "footer": {
          "next": "Next"
        }
      },
      "wizardDetailsDialog": {
        "footer": {
          "cancel": "Cancel"
        },
        "infoLabel": "Learn more",
        "step": "Step {{number}}"
      },
      "wizardDialog": {
        "container": {
          "back": "Back",
          "close": "Close"
        }
      },
      "wizardPage": {
        "container": {
          "next": "Next:",
          "step": "Step {{number}}",
          "total": "of {{total}}"
        },
        "step": {
          "back": "Back",
          "error": {
            "invalid": {
              "description": "Some values are invalid. Review and fix them to proceed.",
              "title": "Invalid data"
            },
            "invalid-required": {
              "description": "Some inputs are missing or invalid. Fix them to proceed.",
              "title": "Missing and invalid data"
            },
            "required": {
              "description": "Some inputs are missing. Fill out all mandatory fields to proceed.",
              "title": "Missing data"
            }
          }
        }
      }
    }
  }
}
